{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = `44952732-afe4551e0894d66c0b6ee4476`;\n\nexport function fetchImages(query) {\n  const url = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  return fetch(url).then(res => {\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    return res.json();\n  });\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport function noImagesMessage() {\n  iziToast.show({\n    message:\n      'Sorry, there are no images matching your search query. Please try again!',\n  });\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { noImagesMessage } from './js/render-functions.js';\n\nconst elements = {\n  submitBtn: document.querySelector(`.js-submit-btn`),\n  form: document.querySelector(`form[data-form]`),\n  input: document.querySelector(`input[data-input]`),\n  gallery: document.querySelector(`.gallery`),\n};\n\nelements.submitBtn.addEventListener(`click`, event => {\n  event.preventDefault();\n\n  const trimmedInput = elements.input.value.trim();\n  const userInputValue = elements.input.value;\n\n  function emptyInputInfo() {\n    if (trimmedInput === '') {\n      elements.submitBtn.disabled = true;\n      console.log(`input is empty`);\n      noImagesMessage();\n      return true;\n    }\n    elements.submitBtn.disabled = false;\n    return false;\n  }\n\n  function createImageCard({\n    webformatURL,\n    largeImageURL,\n    tags,\n    likes,\n    views,\n    comments,\n    downloads,\n  }) {\n    return `<div class=\"image-card\">\n    <img src=\"${largeImageURL}\" alt= \"${tags}\" />\n    <div class=\"info\">\n    <p>Likes: ${likes}</p>\n    <p>Views: ${views}</p>\n    <p>Comments: ${comments}</p>\n    <p>Downloads: ${downloads}</p>\n    </div>\n  </div>`;\n  }\n\n  function processImages(res) {\n    const images = res.hits;\n    let imageMarkup = '';\n    images.forEach(image => {\n      imageMarkup += createImageCard(image);\n    });\n    elements.gallery.innerHTML = imageMarkup;\n  }\n\n  elements.gallery.innerHTML = '';\n  elements.form.reset();\n\n  if (emptyInputInfo()) {\n    elements.submitBtn.disabled = false;\n    return;\n  }\n\n  fetchImages(userInputValue)\n    .then(processImages)\n\n    .catch(error => {\n      console.error(`No Images`, error);\n    });\n});\n"],"names":["API_KEY","fetchImages","query","url","res","noImagesMessage","iziToast","elements","event","trimmedInput","userInputValue","emptyInputInfo","createImageCard","webformatURL","largeImageURL","tags","likes","views","comments","downloads","processImages","images","imageMarkup","image","error"],"mappings":"svBAAA,MAAMA,EAAU,qCAET,SAASC,EAAYC,EAAO,CACjC,MAAMC,EAAM,gCAAgCH,CAAO,MAAME,CAAK,2DAE9D,OAAO,MAAMC,CAAG,EAAE,KAAKC,GAAO,CAC5B,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE5B,OAAOA,EAAI,MACf,CAAG,CACH,CCRO,SAASC,GAAkB,CAChCC,EAAS,KAAK,CACZ,QACE,0EACN,CAAG,CACH,CCLA,MAAMC,EAAW,CACf,UAAW,SAAS,cAAc,gBAAgB,EAClD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,mBAAmB,EACjD,QAAS,SAAS,cAAc,UAAU,CAC5C,EAEAA,EAAS,UAAU,iBAAiB,QAASC,GAAS,CACpDA,EAAM,eAAc,EAEpB,MAAMC,EAAeF,EAAS,MAAM,MAAM,KAAI,EACxCG,EAAiBH,EAAS,MAAM,MAEtC,SAASI,GAAiB,CACxB,OAAIF,IAAiB,IACnBF,EAAS,UAAU,SAAW,GAC9B,QAAQ,IAAI,gBAAgB,EAC5BF,IACO,KAETE,EAAS,UAAU,SAAW,GACvB,GACR,CAED,SAASK,EAAgB,CACvB,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACJ,EAAK,CACD,MAAO;AAAA,gBACKL,CAAa,WAAWC,CAAI;AAAA;AAAA,gBAE5BC,CAAK;AAAA,gBACLC,CAAK;AAAA,mBACFC,CAAQ;AAAA,oBACPC,CAAS;AAAA;AAAA,SAG1B,CAED,SAASC,EAAchB,EAAK,CAC1B,MAAMiB,EAASjB,EAAI,KACnB,IAAIkB,EAAc,GAClBD,EAAO,QAAQE,GAAS,CACtBD,GAAeV,EAAgBW,CAAK,CAC1C,CAAK,EACDhB,EAAS,QAAQ,UAAYe,CAC9B,CAKD,GAHAf,EAAS,QAAQ,UAAY,GAC7BA,EAAS,KAAK,QAEVI,EAAc,EAAI,CACpBJ,EAAS,UAAU,SAAW,GAC9B,MACD,CAEDN,EAAYS,CAAc,EACvB,KAAKU,CAAa,EAElB,MAAMI,GAAS,CACd,QAAQ,MAAM,YAAaA,CAAK,CACtC,CAAK,CACL,CAAC"}